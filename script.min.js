const RPC_URL="https://matic-mumbai.chainstacklabs.com",CHAIN_ID=80001,CONTRACT_ADDRESSES={myToken:"0xA8836515F9F5c0c286262FD4cE7177824E4314be",otherToken:"0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1"};function loadWeb3(){window.web3=new Web3(new Web3.providers.HttpProvider(RPC_URL))}function loadContracts(){const e=window.web3,t=new e.eth.Contract([{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"spender",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"tokenHolder",type:"address"}],name:"AuthorizedOperator",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"bytes",name:"operatorData",type:"bytes"}],name:"Burned",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"bytes",name:"operatorData",type:"bytes"}],name:"Minted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"tokenHolder",type:"address"}],name:"RevokedOperator",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"},{indexed:!1,internalType:"bytes",name:"data",type:"bytes"},{indexed:!1,internalType:"bytes",name:"operatorData",type:"bytes"}],name:"Sent",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!1,internalType:"uint256",name:"value",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"address",name:"spender",type:"address"}],name:"allowance",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",constant:!0},{inputs:[{internalType:"address",name:"spender",type:"address"},{internalType:"uint256",name:"value",type:"uint256"}],name:"approve",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"authorizeOperator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"tokenHolder",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",constant:!0},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"burn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"decimals",outputs:[{internalType:"uint8",name:"",type:"uint8"}],stateMutability:"pure",type:"function",constant:!0},{inputs:[],name:"defaultOperators",outputs:[{internalType:"address[]",name:"",type:"address[]"}],stateMutability:"view",type:"function",constant:!0},{inputs:[],name:"granularity",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",constant:!0},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"address",name:"tokenHolder",type:"address"}],name:"isOperatorFor",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function",constant:!0},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",constant:!0},{inputs:[{internalType:"address",name:"account",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"operatorData",type:"bytes"}],name:"operatorBurn",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"sender",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"},{internalType:"bytes",name:"operatorData",type:"bytes"}],name:"operatorSend",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"}],name:"revokeOperator",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"bytes",name:"data",type:"bytes"}],name:"send",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function",constant:!0},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function",constant:!0},{inputs:[{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transfer",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"holder",type:"address"},{internalType:"address",name:"recipient",type:"address"},{internalType:"uint256",name:"amount",type:"uint256"}],name:"transferFrom",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"}],name:"swap",outputs:[],stateMutability:"nonpayable",type:"function"}],CONTRACT_ADDRESSES.myToken),n=new e.eth.Contract([{constant:!0,inputs:[],name:"name",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_spender",type:"address"},{name:"_value",type:"uint256"}],name:"approve",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"totalSupply",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_from",type:"address"},{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transferFrom",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[],name:"decimals",outputs:[{name:"",type:"uint8"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"}],name:"balanceOf",outputs:[{name:"balance",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{constant:!0,inputs:[],name:"symbol",outputs:[{name:"",type:"string"}],payable:!1,stateMutability:"view",type:"function"},{constant:!1,inputs:[{name:"_to",type:"address"},{name:"_value",type:"uint256"}],name:"transfer",outputs:[{name:"",type:"bool"}],payable:!1,stateMutability:"nonpayable",type:"function"},{constant:!0,inputs:[{name:"_owner",type:"address"},{name:"_spender",type:"address"}],name:"allowance",outputs:[{name:"",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"},{payable:!0,stateMutability:"payable",type:"fallback"},{anonymous:!1,inputs:[{indexed:!0,name:"owner",type:"address"},{indexed:!0,name:"spender",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,name:"from",type:"address"},{indexed:!0,name:"to",type:"address"},{indexed:!1,name:"value",type:"uint256"}],name:"Transfer",type:"event"}],CONTRACT_ADDRESSES.otherToken);window.contracts={myToken:{contract:t,address:CONTRACT_ADDRESSES.myToken},otherToken:{contract:n,address:CONTRACT_ADDRESSES.otherToken}}}let account=null;function handleAccountsChanged(e){e.length>=1?(account=e[0],document.querySelector("#accountAddress").textContent=account):document.querySelector("#accountAddress").textContent="X"}function isValidationError(){if(null==account)return"Wallet Not Connected";const e=document.querySelector("#amount").value;return""==e||isNaN(e)||e<0?"Invalid Amount":null}function connectWallet(){window.ethereum.enable(),window.ethereum.request({method:"eth_accounts"}).then(e=>handleAccountsChanged(e)).catch(e=>alert(e.message))}function sendTrx(e,t){const n={to:e,from:account,value:0,data:t,gas:"100000"};window.ethereum.request({method:"eth_sendTransaction",params:[n]}).then(e=>{checkTrx(e)}).catch(e=>{alert(`Error: ${e.message}`)})}const CHECK_TRX_INTERVAL=2e3;function checkTrx(e){window.web3.eth.getTransactionReceipt(e,(t,n)=>{if(t)return alert(`Error: ${t.message}`);null!=n?n.status?alert("Transaction Successful"):alert("Transaction Failed"):setTimeout(()=>{checkTrx(e)},CHECK_TRX_INTERVAL)})}async function step1(){const e=isValidationError();if(e)return alert(`Error: ${e}`);const t=document.querySelector("#amount").value,n=window.web3.utils.toWei(t),a=(await window.contracts.otherToken.contract.methods.approve(window.contracts.myToken.address,n)).encodeABI();sendTrx(window.contracts.otherToken.address,a)}async function step2(){const e=isValidationError();if(e)return alert(`Error: ${e}`);const t=document.querySelector("#amount").value,n=window.web3.utils.toWei(t);if(await window.contracts.otherToken.contract.methods.allowance(account,window.contracts.myToken.address).call()<n)return alert("Error: Not Enough Allowance");const a=(await window.contracts.myToken.contract.methods.swap(n)).encodeABI();sendTrx(window.contracts.myToken.address,a)}window.ethereum?(loadWeb3(),loadContracts(),window.ethereum.on("accountsChanged",handleAccountsChanged),connectWallet()):alert("No Web3 Wallet Found. Consider installing MetaMask.");